{"version":3,"sources":["orb.gif","context.js","components/ContactComponent/contact.template.jsx","components/ContactComponent/contacts.component.js","components/HeaderComponent/header.template.jsx","components/HeaderComponent/header.component.js","components/FormComponent/form.input.component.jsx","components/FormComponent/form.contact.template.jsx","components/FormComponent/form.contact.component.js","components/FormComponent/edit.contact.component.js","components/pages/About.js","components/pages/NotFound.js","components/test/test.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Context","React","createContext","reducer","state","action","type","payload","Object","objectSpread","contacts","filter","contact","id","concat","toConsumableArray","map","Provider","name","email","phone","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","ContactTemplate","showContactInfo","onExpandClick","onDeleteClick","_callee","regenerator_default","wrap","_context","prev","next","delete","catch","e","console","log","sent","status","stop","_this2","_this$props$contact","className","onClick","Link","to","style","cursor","float","color","marginRight","Contacts","react","contact_template","key","HeaderTemplate","brand","Header","branding","header_template","defaultProps","FormInput","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","ContactFormTemplate","handleChange","handleSubmit","errors","onSubmit","form_input_component","ContactForm","defineProperty","target","_this$state","newContact","preventDefault","hasErrors","abrupt","post","history","push","trim","_this$state2","form_contact_template","EditContact","put","match","params","About","NotFound","Test","loading","posts","fetch","then","response","json","marginTop","window","innerHeight","src","alt","body","App","context_Provider","HashRouter","HeaderComponent_header_component","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acee6e41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/orb.ed236853.gif\";","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === payload.id ? contact = payload : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n            { id: 1, name: 'John doe1', email: 'jdoe1@gmail.com', phone: '555-555-555'},\r\n            { id: 2, name: 'John doe2', email: 'jdoe2@gmail.com', phone: '554-555-555'},\r\n            { id: 3, name: 'John doe3', email: 'jdoe3@gmail.com', phone: '553-555-555'},\r\n            { id: 4, name: 'John doe4', email: 'jdoe4@gmail.com', phone: '552-555-555'}\r\n        ],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data})\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer; ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass ContactTemplate extends Component {\r\n\r\n    state = {\r\n        showContactInfo: true\r\n    }\r\n\r\n    onExpandClick = () => this.setState({showContactInfo: !this.state.showContactInfo});\r\n    \r\n    onDeleteClick = async (id, dispatch) => {\r\n        const res = await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            .catch(e => {console.log(e); dispatch({type : 'DELETE_CONTACT', payload: id});});\r\n        if (res.status === 200) dispatch({type : 'DELETE_CONTACT', payload: id});\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card border-primary mb-3\">\r\n                            <h4 className=\"card-header pb-3 pt-3\">{name + ' '} \r\n                                <i onClick={() => this.onExpandClick()} className=\"fa fa-sort-down\"></i>\r\n                                <i className=\"fas fa-times\" onClick={() => this.onDeleteClick(id, dispatch)}></i>\r\n                                <Link to={`contact/edit/${id}`} >\r\n                                    <i \r\n                                        className=\"fa fa-edit text-warning\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                        }}>\r\n                                    </i>\r\n                                </Link>\r\n                            </h4>\r\n                            { showContactInfo ? (\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title pb-2 pt-2\">{email}</h5>\r\n                                    <p className=\"card-text lead pb-2 pt-2\">{phone}</p>\r\n                                </div> \r\n                                ) : null\r\n                            }\r\n                        </div>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactTemplate;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Consumer } from '../../context';\r\n\r\nimport ContactTemplate from './contact.template';\r\nimport './contact.component.css';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => { \r\n                    const { contacts } = value;\r\n                    return (\r\n                    <Fragment>\r\n                        <h1 className=\"mb-4 mt-5\">\r\n                            <span className=\"text-primary\">Contact</span> List\r\n                        </h1>\r\n                        {contacts.map(contact => (\r\n                            <ContactTemplate \r\n                                key={contact.id} \r\n                                contact={contact}  \r\n                                onExpandClick={this.onExpandClick} />\r\n                        ))}\r\n                    </Fragment>\r\n                )}}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeaderTemplate = props => {\r\n    const { brand } = props;\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">{brand}</Link>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add contact</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/test\" className=\"nav-link\"><i className=\"fas fa-wrench\"></i> Test</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderTemplate;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport HeaderTemplate from './header.template';\r\nimport './header.component.css';\r\n\r\nclass Header extends Component {\r\n    // Setting default props\r\n    static defaultProps = {\r\n        branding: \"My App\"\r\n    };\r\n    // Setting types for props\r\n    static propTypes = {\r\n        branding: PropTypes.string.isRequired\r\n    };\r\n    // Render Template\r\n    render() {\r\n        const { branding } = this.props;\r\n        return <HeaderTemplate brand={branding} />;\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\nconst FormInput = ({label, name, value, placeholder, type, onChange, error}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input \r\n            type={type}\r\n            name={name}\r\n            className={classnames('form-control form-control-lg', { 'is-invalid': error })}\r\n            placeholder={placeholder}\r\n            value={value} \r\n            onChange={onChange}/>\r\n            <div className=\"invalid-feedback\">This must not be empty.</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nFormInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nFormInput.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default FormInput\r\n","import React from 'react';\r\nimport { Consumer } from '../../context';\r\nimport FormInput  from './form.input.component';\r\n\r\nconst ContactFormTemplate = props => {\r\n    const { name, email, phone, handleChange, handleSubmit, errors } = props;\r\n    return (\r\n        <Consumer>{value => {\r\n            const { dispatch } = value;\r\n            return (\r\n                <div className=\"card mb-3 mt-4\">\r\n                    <h4 className=\"card-header\">Add Contact</h4>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={e => handleSubmit(e, dispatch)}>\r\n                            <FormInput \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                placeholder=\"Enter name...\"\r\n                                onChange={handleChange}\r\n                                error={errors.name} />\r\n                            <FormInput \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                placeholder=\"Enter email...\"\r\n                                type=\"email\"\r\n                                onChange={handleChange}\r\n                                error={errors.email} />\r\n                            <FormInput \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                value={phone}\r\n                                placeholder=\"Enter phone...\"\r\n                                onChange={handleChange}\r\n                                error={errors.phone} />\r\n                            <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-outline-primary\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }}\r\n        </Consumer>\r\n    )\r\n}\r\n\r\nexport default ContactFormTemplate;","import React, { Component } from 'react';\r\nimport ContactFormTemplate from './form.contact.template';\r\nimport axios from 'axios';\r\n\r\nexport default class ContactForm extends Component {\r\n    // Component state\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    // Handles input change - saves new values to state with every key stroke\r\n    handleChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    // Handles submit - input values are already in state due to handleChange method\r\n    handleSubmit = async (e, dispatch) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for errors, return if has any\r\n        if(this.hasErrors(name, email, phone)) return;\r\n\r\n        // Create a new contact object with the validated value\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n        \r\n        // Clear this component state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        // Redirect to home\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    // Method to check for input errors\r\n    hasErrors(name, email, phone) {\r\n        if(name.trim() === '') {\r\n            this.setState({errors: { name : 'Name is required' }});\r\n            return true;\r\n        }\r\n        if(email.trim() === '') {\r\n            this.setState({errors: { email : 'Email is required' }});\r\n            return true;\r\n        }\r\n        if(phone.trim() === '') {\r\n            this.setState({errors: { phone : 'Phone is required' }});\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <ContactFormTemplate \r\n                name={name}\r\n                email={email}\r\n                phone={phone}\r\n                handleChange={this.handleChange} \r\n                handleSubmit={this.handleSubmit}\r\n                errors={errors} />\r\n            )   \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport FormInput  from './form.input.component';\r\nimport axios from 'axios';\r\n\r\nexport default class EditContact extends Component {\r\n    // Component state\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    // Handles input change - saves new values to state with every key stroke\r\n    handleChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    // Handles submit - input values are already in state due to handleChange method\r\n    handleSubmit = async (e, dispatch) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        // Check for errors, return if has any\r\n        if(this.hasErrors(name, email, phone)) return;\r\n        \r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`, {name, email, phone});\r\n        console.log(res);\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n        \r\n        // Clear this component state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        // Redirect to home\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    // Method to check for input errors\r\n    hasErrors(name, email, phone) {\r\n        if(name.trim() === '') {\r\n            this.setState({errors: { name : 'Name is required' }});\r\n            return true;\r\n        }\r\n        if(email.trim() === '') {\r\n            this.setState({errors: { email : 'Email is required' }});\r\n            return true;\r\n        }\r\n        if(phone.trim() === '') {\r\n            this.setState({errors: { phone : 'Phone is required' }});\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>{value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={e => this.handleSubmit(e, dispatch)}>\r\n                                <FormInput \r\n                                    label=\"Name\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    placeholder=\"Enter name...\"\r\n                                    onChange={this.handleChange}\r\n                                    error={errors.name} />\r\n                                <FormInput \r\n                                    label=\"Email\"\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    placeholder=\"Enter email...\"\r\n                                    type=\"email\"\r\n                                    onChange={this.handleChange}\r\n                                    error={errors.email} />\r\n                                <FormInput \r\n                                    label=\"Phone\"\r\n                                    name=\"phone\"\r\n                                    value={phone}\r\n                                    placeholder=\"Enter phone...\"\r\n                                    onChange={this.handleChange}\r\n                                    error={errors.phone} />\r\n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-danger\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n            </Consumer>\r\n            )   \r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\">About Contact Manager</h1>\r\n        <p className=\"lead s\">Simple app to manage contact. Just a learning project.</p>\r\n        <p className=\"text-secondary\">Version 1.0.0</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page not found</h1>\r\n        <p className=\"lead\">Sorry, looks like this page does not exist.</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport loading from '../../orb.gif';\r\n\r\nexport default class Test extends Component {\r\n    state = {\r\n        loading: true,\r\n        posts: []\r\n    }\r\n    componentDidMount() {\r\n        console.log('componentDidMount()');\r\n        fetch('https://jsonplaceholder.typicode.com/comments')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({loading: false, posts: data}));\r\n    }\r\n    \r\n    render() {\r\n        console.log('component render()');\r\n        return (\r\n            <div>\r\n                <h2 className=\"mb-4 pt-4 pb-4\">Just a testing component <i className=\"fas fa-wrench\"></i></h2>\r\n                {this.state.loading ? \r\n                    <div id=\"loading-div\" style={{marginTop: `${window.innerHeight / 2 - 200}px`}}>\r\n                        <img src={loading} className=\"img-fluid\" alt=\"loading\" />  \r\n                    </div>\r\n                    :\r\n                    this.state.posts.map(post => (\r\n                    <div key={post.id} className=\"card mb-4\">\r\n                        <div className=\"card-header\">Quote</div>\r\n                        <div className=\"card-body\">\r\n                        <blockquote className=\"blockquote\">\r\n                            <p>{post.body}</p>\r\n                            <footer className=\"blockquote-footer\">{post.email}</footer>\r\n                        </blockquote>\r\n                        </div>\r\n                    </div>))}\r\n            </div>\r\n        )          \r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\n/** Custom Components */\nimport Contacts from './components/ContactComponent/contacts.component';\nimport Header from './components/HeaderComponent/header.component';\nimport ContactForm from './components/FormComponent/form.contact.component';\nimport EditContact from './components/FormComponent/edit.contact.component';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/test.component';\nimport Provider from './context';\n/** CSS Styles */\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={ContactForm} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}